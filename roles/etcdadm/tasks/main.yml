---
- name: etcdadm | download etcdadm binary from filesystem
  unarchive:
    src: "{{ etcdadm_release_url }}"
    dest: "/usr/bin"
    mode: 0755
  when: "'http://' not in etcdadm_release_url and 'https://' not in etcdadm_release_url"

- name: etcdadm | download etcdadm binary from http(s)
  block:
    - name: etcdadm | download etcdadm binary
      get_url:
        url: "{{ etcdadm_release_url }}"
        dest: "/tmp/etcdadm.tar.gz"
        mode: 0644
    - name: etcdadm | unarchive etcdadm
      unarchive:
        src: "/tmp/etcdadm.tar.gz"
        dest: "/usr/bin"
        mode: 0755
  when: "'http://' in etcdadm_release_url or 'https://' in etcdadm_release_url"

- name: etcdadm | Initialize first etcd member
  command: >-
    timeout -k 600s 600s /usr/bin/etcdadm init --name {{ inventory_hostname }}
    {% if etcd_release_url|length > 0 %}
    --release-url {{ etcd_release_url }}
    {% endif %}
    --version {{ etcd_version }}
    {% if etcdadm_debug|bool %}
    -l debug
    {% endif %}
  register: etcdadm_init_res
  when: inventory_hostname == groups['etcd']|first
  failed_when: etcdadm_init_res.rc != 0

- debug:
    msg: "{{ etcdadm_init_res.stdout }}"
  when: inventory_hostname == groups['etcd']|first

- name: etcdadm | ensure etcd certs dir exists
  file:
    path: "{{ etcdadm_certs_dir }}"
    state: directory

- name: etcdadm | slurp etcd ca certs
  slurp:
    src: "{{ item }}"
  with_items:
    - "{{ etcdadm_certs_dir }}/ca.crt"
    - "{{ etcdadm_certs_dir }}/ca.key"
  register: etcdadm_certs
  delegate_to: "{{ groups['etcd']|first }}"
  run_once: true

- name: etcdadm | write out etcdadm certs
  copy:
    dest: "{{ item.item }}"
    content: "{{ item.content | b64decode }}"
    owner: root
    group: root
    mode: 0600
  no_log: true
  with_items: "{{ etcdadm_certs.results }}"
  when: inventory_hostname != groups['etcd']|first

- name: etcdadm | join etcd member
  block:
    - name: etcdadm | join etcd member by timeout 600s
      command: >-
        timeout -k 600s 600s /usr/bin/etcdadm join https://{{ hostvars[groups['etcd'][0]]['ansible_ssh_host'] }}:2379
        --name {{ inventory_hostname }}
        {% if etcd_release_url|length > 0 %}
        --release-url {{ etcd_release_url }}
         {% endif %}
        --version {{ etcd_version }}
        {% if etcdadm_debug|bool %}
        -l debug
        {% endif %}
      register: etcdadm_join_res
      failed_when: etcdadm_join_res.rc != 0
    - name: etcdadm | wait for etcd running on local member
      command: "{{ etcdadm_install_dir }}/etcdctl.sh endpoint health --cluster -w table"
      register: etcd_endpoint_health_res
      until: "etcd_endpoint_health_res.rc == 0"
      retries: 30
      delay: 5
    - debug:
        msg: "{{ etcd_endpoint_health_res.stdout }}"
  when: inventory_hostname != groups['etcd']|first

